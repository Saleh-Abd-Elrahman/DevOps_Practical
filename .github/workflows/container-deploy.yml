name: Deploy Container App to Azure

on:
  push:
    branches:
      - main

env:
  REGISTRY_LOGIN_SERVER: 'salehexerciseacr.azurecr.io'
  IMAGE_BASE_NAME: 'flask-demo'
  RESOURCE_GROUP: 'BCSAI2024-DEVOPS-STUDENTS-A-DEV'
  WEBAPP_NAME: 'SalehExerciseWebApp'
  APP_SERVICE_PLAN: 'SalehExerciseAppServicePlan'
  KEY_VAULT_NAME: 'salehexercise-kv-2'
  KEY_VAULT_SECRET_NAME_ACR_USERNAME: 'acrAdminUserName'
  KEY_VAULT_SECRET_NAME_ACR_PASSWORD: 'acrAdminUserPassword1'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image-version: ${{ steps.image-version.outputs.version }}
    steps:
    - name: Checkout code
      uses: actions/checkout@main

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    
    - name: 'Get docker registry credentials from Azure Key Vault'
      uses: azure/CLI@v1
      with:
        inlineScript: |
        echo "ACR_USERNAME=$(az keyvault secret show --name ${{ env.KEY_VAULT_SECRET_NAME_ACR_USERNAME }} --vault-name ${{ env.KEY_VAULT_NAME }} --query value -o tsv)" >> $GITHUB_ENV
        echo "ACR_PASSWORD=$(az keyvault secret show --name ${{ env.KEY_VAULT_SECRET_NAME_ACR_PASSWORD }} --vault-name ${{ env.KEY_VAULT_NAME }} --query value -o tsv)" >> $GITHUB_ENV



    - name: Login to ACR
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_LOGIN_SERVER }}
        username: ${{ env.ACR_USERNAME }}
        password: ${{ env.ACR_PASSWORD }}


    - name: Set image version
      id: image-version
      run: echo "version=${GITHUB_REF#refs/heads/}-$(date +'%Y.%m.%d.%H.%M')" >> $GITHUB_OUTPUT


    - name: Build and Push Docker Image
      run: |
        docker build . -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{env.IMAGE_BASE_NAME}}:${{ steps.image-version.outputs.version }}
        docker build . -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{env.IMAGE_BASE_NAME}}:${{ github.ref_name }}-latest
        docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{env.IMAGE_BASE_NAME}}:${{ steps.image-version.outputs.version }}
        docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{env.IMAGE_BASE_NAME}}:${{ github.ref_name }}-latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Docker Image to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.WEBAPP_NAME }}
        images: |
          ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ needs.build-and-push.outputs.image-version }}