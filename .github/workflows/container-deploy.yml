name: Deploy Container App to Azure

on:
  push:
    branches:
      - main

env:
  REGISTRY_LOGIN_SERVER: 'salehexerciseacr.azurecr.io'
  IMAGE_BASE_NAME: 'flask-demo'
  RESOURCE_GROUP: 'BCSAI2024-DEVOPS-STUDENTS-A-DEV'
  WEBAPP_NAME: 'SalehExerciseWebApp'
  APP_SERVICE_PLAN: 'SalehExerciseAppServicePlan'
  KEY_VAULT_NAME: keyVaultName

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image-version: ${{ steps.image-version.outputs.version }}
    steps:
    - name: Checkout code
      uses: actions/checkout@main

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Step 3: Retrieve secrets from Azure Key Vault using Azure CLI
    - name: Get secrets from Azure Key Vault
      run: |
        REGISTRY_USERNAME=$(az keyvault secret show --vault-name ${{ env.KEYVAULT_NAME }} --name secretAdminUserName --query value -o tsv)
        REGISTRY_PASSWORD=$(az keyvault secret show --vault-name ${{ env.KEYVAULT_NAME }} --name secretAdminPassword1 --query value -o tsv)
        REGISTRY_PASSWORD1=$(az keyvault secret show --vault-name ${{ env.KEYVAULT_NAME }} --name secretAdminPassword2 --query value -o tsv)
        echo "REGISTRY_USERNAME=$REGISTRY_USERNAME" >> $GITHUB_ENV
        echo "REGISTRY_PASSWORD=$REGISTRY_PASSWORD" >> $GITHUB_ENV
        echo "REGISTRY_PASSWORD1=$REGISTRY_PASSWORD1" >> $GITHUB_ENV


    
    - name: Login to ACR
      run: |
        echo "$REGISTRY_PASSWORD" | docker login $REGISTRY_LOGIN_SERVER -u $REGISTRY_USERNAME --password-stdin

    - name: Set image version
      id: image-version
      run: echo "version=${GITHUB_REF#refs/heads/}-$(date +'%Y.%m.%d.%H.%M')" >> $GITHUB_OUTPUT


    - name: Build and Push Docker Image
      run: |
        docker build . -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{env.IMAGE_BASE_NAME}}:${{ steps.image-version.outputs.version }}
        docker build . -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{env.IMAGE_BASE_NAME}}:${{ github.ref_name }}-latest
        docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{env.IMAGE_BASE_NAME}}:${{ steps.image-version.outputs.version }}
        docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{env.IMAGE_BASE_NAME}}:${{ github.ref_name }}-latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Docker Image to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.WEBAPP_NAME }}
        images: |
          ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ needs.build-and-push.outputs.image-version }}